################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################


#==============================================================================
# Queryable state
#==============================================================================
query.proxy.ports: 50100-50200
query.server.ports: 50201-50300

#==============================================================================
# Web Frontend
#==============================================================================

jobmanager.web.port: <%= node['flink']['jobmanager']['web_port'] %>

webclient.port: <%= node['flink']['webclient_port'] %>

#==============================================================================
# Streaming state checkpointing
#==============================================================================

# The backend that will be used to store operator state checkpoints if 
# checkpointing is enabled. 
#
# Supported backends: jobmanager, filesystem

state.backend: jobmanager


#==============================================================================
# Advanced
#==============================================================================

env.pid.dir: /tmp

# The number of buffers for the network stack.
#
taskmanager.network.numberOfBuffers: <%= node['flink']['taskmanager']['network_num_buffers'] %>

# Directories for temporary files.
#
# Add a delimited list for multiple directories, using the system directory
# delimiter (colon ':' on unix) or a comma, e.g.:
#     /data1/tmp:/data2/tmp:/data3/tmp
#
# Note: Each directory entry is read from and written to by a different I/O
# thread. You can include the same directory multiple times in order to create
# multiple I/O threads against that directory. This is for example relevant for
# high-throughput RAIDs.
#
# If not specified, the system-specific Java temporary directory (java.io.tmpdir
# property) is taken.
#
io.tmp.dirs: ${LOCAL_DIRS}
web.upload.dir: ${LOCAL_DIRS}
web.tmpdir: ${LOCAL_DIRS}

#==============================================================================
# History server
#==============================================================================

historyserver.web.port: <%= node['flink']['historyserver']['port'] %>

env.hadoop.conf.dir: <%= node['hops']['conf_dir'] %>

historyserver.archive.fs.dir: hdfs://<%= node['flink']['historyserver']['remote_dir'] %>

historyserver.web.tmpdir: <%= node['flink']['historyserver']['tmp'] %>

jobmanager.archive.fs.dir: hdfs://<%= node['flink']['historyserver']['remote_dir'] %>

